{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","TodoList","state","isTitle","isUserChoose","changeHandler","event","value","target","setState","handleSelect","console","log","clearForm","handleSubmit","preventDefault","trim","length","newTodo","uuid","user","props","find","addTodo","currentState","this","className","onSubmit","type","onChange","placeholder","map","todo","React","Component","preparedTodos","todosFromServer","usersFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18967f80.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport { uuid } from 'uuidv4';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n  users: User[];\n  addTodo: (todo: Todo) => void;\n};\n\ninterface State {\n  title: string;\n  userId: number;\n  isTitle: boolean;\n  isUserChoose: boolean;\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    userId: 0,\n    isTitle: true,\n    isUserChoose: true,\n  };\n\n  changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n      isTitle: true,\n    });\n  };\n\n  handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    // eslint-disable-next-line no-console\n    console.log(value); // select value\n\n    this.setState({\n      userId: +value,\n      isUserChoose: true,\n    });\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      userId: 0,\n      isTitle: true,\n      isUserChoose: true,\n    });\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (this.state.title.trim().length === 0) {\n      this.setState((currentState) => ({\n        isTitle: !currentState.isTitle,\n      }));\n\n      return;\n    }\n\n    if (this.state.userId === 0) {\n      this.setState((currentState) => ({\n        isUserChoose: !currentState.isUserChoose,\n      }));\n\n      return;\n    }\n\n    const newTodo = {\n      uuid: uuid(),\n      title: this.state.title,\n      completed: false,\n      userId: this.state.userId,\n      user: this.props.users.find(user => (\n        user.id === this.state.userId)) || null,\n    };\n\n    // eslint-disable-next-line no-console\n    console.log('submit', newTodo);\n\n    this.props.addTodo(newTodo);\n    this.clearForm();\n  };\n\n  render() {\n    const { todos, users } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"TodoList__form container col-2\"\n        >\n          <fieldset className=\"TodoList__form\">\n            <legend>\n              Creat new TODO\n            </legend>\n\n            <div className=\"TodoList__form-input mb-4\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                value={this.state.title}\n                onChange={this.changeHandler}\n                placeholder=\"add task\"\n                className=\"form-control\"\n                aria-describedby=\"titleWarning\"\n              />\n              <span id=\"titleWarning\" className=\"form-text\">\n                {!this.state.isTitle\n                  && <span className=\"error-message\">Please enter the title</span>}\n              </span>\n            </div>\n\n            <div className=\"TodoList__form-input mb-4\">\n              <select\n                name=\"username\"\n                id=\"username\"\n                value={this.state.userId}\n                onChange={this.handleSelect}\n                aria-describedby=\"selectWarning\"\n                className=\"col-2 form-select\"\n              >\n                <option value=\"\">Choose a user</option>\n                {users.map((user) => (\n                  <option\n                    value={user.id}\n                    key={user.id}\n                  >\n                    {user.name}\n                  </option>\n                ))}\n              </select>\n\n              <span id=\"selectWarning\" className=\"form-text\">\n                {!this.state.isUserChoose\n                  && <span className=\"error-message\">Please choose a user</span>}\n              </span>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary col-12\">Add</button>\n\n          </fieldset>\n        </form>\n\n        <ul className=\"todo-list list-group\">\n          {\n            todos.map(todo => (\n              <li key={todo.uuid} className=\"todo-list__item list-group-item d-grid\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    {todo.title}\n                  </div>\n\n                  <div className=\"col\">\n                    {todo.user?.name}\n                  </div>\n\n                  <div className=\"col\">\n                    {todo.user?.username}\n                  </div>\n\n                  <div className=\"col\">\n                    {todo.user?.email}\n                  </div>\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { uuid } from 'uuidv4';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  uuid: uuid(),\n  user: usersFromServer.find(({ id }) => id === todo.userId) || null,\n}));\n\ninterface State {\n  todos: Todo[];\n  users: User[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: preparedTodos,\n    users: usersFromServer,\n  };\n\n  addTodo = (newTodo: Todo) => {\n    this.setState((currentState) => {\n      return {\n        todos: [...currentState.todos, newTodo],\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <TodoList\n          addTodo={this.addTodo}\n          todos={this.state.todos}\n          users={this.state.users}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}